/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var roi = 
    /* color: #d63000 */
    /* shown: false */
    ee.Geometry.Point([138.44967999613215, -34.7972525491953]),
    s2 = ee.ImageCollection("COPERNICUS/S2_SR"),
    myd09ga = ee.ImageCollection("MODIS/061/MYD09GA"),
    l3smi = ee.ImageCollection("NASA/OCEANDATA/MODIS-Aqua/L3SMI"),
    mod_mask = ee.ImageCollection("MODIS/006/MOD44W");
/***** End of imports. If edited, may not auto-convert in the playground. *****/
// Mask for land
var land_mask = ee.Image(mod_mask.select("water_mask").first())
Map.addLayer(land_mask, {min:0,max:1},'mod_mask',false)

// TSS: NIR/RED

// Function to mask clouds using the quality band of Landsat 8.
var maskL8 = function(image) {
  var qa = image.select('QA_PIXEL');
  /// Check that the cloud bit is off.
  // See https://www.usgs.gov/media/files/landsat-8-9-olitirs-collection-2-level-1-data-format-control-book
  var mask = qa.bitwiseAnd(1 << 3).eq(0);
  return image.updateMask(mask);
};

// Map the function over one year of Landsat 8 TOA data and take the median.
var composite = ee.ImageCollection('LANDSAT/LC08/C02/T1_TOA')
                     .filterDate('2019-09-12', '2019-09-13')
                     .filterBounds(roi)
    // .map(maskL8)
    .median();

var tss = composite.select("B5").divide(composite.select("B4"))

// Display the results in a cloudy place.
Map.addLayer(composite.mask(land_mask), {bands: ['B4', 'B3', 'B2'], max: 0.3}, 
"L8", false);
Map.addLayer(ee.Image(1).subtract(tss).mask(land_mask),{min:0.4,max:0.8,
palette:["#000004FF", "#1B0C42FF", "#4B0C6BFF", "#781C6DFF", "#A52C60FF", 
"#CF4446FF", "#ED6925FF", "#FB9A06FF", "#F7D03CFF", "#FCFFA4FF"]},
"L8 TSS",false)




// Sentinel 2 TOA ===============================================
// Noisier than Landsat but pretty high resolution
var c2 = s2.filterDate('2019-09-12', '2019-09-15')
            .filterBounds(roi)
    // .map(maskL8)
    .median();
print(c2)
var tss2 = c2.select("B8").divide(c2.select("B4"))
Map.addLayer(ee.Image(1).subtract(tss2).mask(land_mask),{min:0.2,max:0.9,
palette:["#000004FF", "#1B0C42FF", "#4B0C6BFF", "#781C6DFF", "#A52C60FF", 
"#CF4446FF", "#ED6925FF", "#FB9A06FF", "#F7D03CFF", "#FCFFA4FF"]}, 
 "S2 TSS",false)

Map.addLayer(c2.mask(land_mask),
 {min:200,max:1500,
 bands:['B4','B3','B2']
//   palette:["#000004FF", "#1B0C42FF", "#4B0C6BFF", "#781C6DFF", "#A52C60FF", 
// "#CF4446FF", "#ED6925FF", "#FB9A06FF", "#F7D03CFF", "#FCFFA4FF"]
 }, 
 "S2 321",true)

Map.addLayer(c2.mask(land_mask),
 {min:200,max:1500,
 bands:['B1'],
  palette:["#000004FF", "#1B0C42FF", "#4B0C6BFF", "#781C6DFF", "#A52C60FF", 
"#CF4446FF", "#ED6925FF", "#FB9A06FF", "#F7D03CFF", "#FCFFA4FF"]
 }, 
 "S2 1",true)

// AQUA 250m surface reflectance ===============================
// SUPER NOISY
var getQABits = function(image, start, end, newName) {
    // Compute the bits we need to extract.
    var pattern = 0;
    for (var i = start; i <= end; i++) {
       pattern += Math.pow(2, i);
    }
    return image.select([0], [newName])
                  .bitwiseAnd(pattern)
                  .rightShift(start);
};
var maskMYD09GQ = function(image){
  var qa_mask = getQABits(image.select("QC_250m"),0,1,'good').lte(1)
  var out = image.updateMask(qa_mask)
  return(out)
}

var c3 = ee.ImageCollection("MODIS/061/MYD09GQ")
             .filterDate('2019-09-12', '2019-09-14')
            .filterBounds(roi)
            .map(maskMYD09GQ)
            .first();
// print(c3)
// Map.addLayer(c3)
var tss3 = c3.select("sur_refl_b02").divide(c3.select("sur_refl_b01"))
Map.addLayer(ee.Image(1).subtract(tss3).mask(land_mask),{min:0.4,max:1.1,
palette:["#000004FF", "#1B0C42FF", "#4B0C6BFF", "#781C6DFF", "#A52C60FF", 
"#CF4446FF", "#ED6925FF", "#FB9A06FF", "#F7D03CFF", "#FCFFA4FF"]}, 
 "Aqua TSS",false)





// AQUA Ocean surface reflectance =================
// NOISY ! ========================================

var maskMYDOCGA = function(image){
  var b13_mask = getQABits(image.select("QC_b8_15_1km"),20,23,'good').eq(0)
  var b14_mask = getQABits(image.select("QC_b8_15_1km"),24,27,'good').eq(0)
  var b16_mask = getQABits(image.select("QC_b16_1km"),4,7,'good').eq(0)
  var out = image.updateMask(b13_mask)
                 .updateMask(b14_mask)
                 .updateMask(b16_mask)
  return(out)
}
var calc_tss_MYDOCGA = function(image){
 var nir = image.select("sur_refl_b16") //
 var red = image.select("sur_refl_b14")
 
 var tss = image.expression(
    '(1 - ((NIR) / (RED)))', {
      'NIR': image.select('sur_refl_b16'),
      'RED': image.select('sur_refl_b14')
            }).rename("tss")
 return(tss)

}

// print(ee.ImageCollection("MODIS/006/MYDOCGA").first())
var c4 = ee.ImageCollection("MODIS/006/MYDOCGA")
             .filterDate('2019-09-12', '2019-09-30')
            .filterBounds(roi)
            .map(maskMYDOCGA)
            .map(calc_tss_MYDOCGA)
            .mean();
print(c4)
// Map.addLayer(c3)

Map.addLayer(c4.mask(land_mask),{min:0.4,max:1.1,
palette:["#000004FF", "#1B0C42FF", "#4B0C6BFF", "#781C6DFF", "#A52C60FF", 
"#CF4446FF", "#ED6925FF", "#FB9A06FF", "#F7D03CFF", "#FCFFA4FF"]}, 
 "Aqua Ocean TSS",false)





// AQUA 250m surface reflectance ===============================
// SUPER NOISY
var getQABits = function(image, start, end, newName) {
    // Compute the bits we need to extract.
    var pattern = 0;
    for (var i = start; i <= end; i++) {
       pattern += Math.pow(2, i);
    }
    return image.select([0], [newName])
                  .bitwiseAnd(pattern)
                  .rightShift(start);
};
var maskMYD09GQ = function(image){
  var qa_mask = getQABits(image.select("QC_250m"),4,7,'good').eq(0)
  var b2_mask = image.select("sur_refl_b02").gte(10)
  var out = image.updateMask(qa_mask)
                // .updateMask(b2_mask)
  return(out)
}

var c3 = ee.ImageCollection("MODIS/061/MYD09GQ")
             .filterDate('2019-09-12', '2019-09-13')
            .filterBounds(roi)
            .map(maskMYD09GQ)
            .mean();
// print(c3)
// Map.addLayer(c3)

Map.addLayer(c3.select("sur_refl_b01").log().mask(land_mask),{min:1.5,max:8,
palette:["#000004FF", "#1B0C42FF", "#4B0C6BFF", "#781C6DFF", "#A52C60FF", 
"#CF4446FF", "#ED6925FF", "#FB9A06FF", "#F7D03CFF", "#FCFFA4FF"]}, 
 "Aqua band red",false)
